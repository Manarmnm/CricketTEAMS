/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

import MODEL.*;
import CONTROLLER.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MASS MNM
 */
public class WicketKeeper_Frm extends javax.swing.JFrame {
 private ArrayList<Wicket_KeeperList>  WKList;    //ADD to ArrayList
 private Player_RoleDB RoleDB; 
 private MasterDB    MasterDB;
 private ArrayList<Neural_WicketKeeperList>NList;
 private DefaultTableModel tblModel;
 
Connection conn=null;
ResultSet rs=null;
PreparedStatement pst=null;
 
    
    /**
     * Creates new form WicketKeeper_Frm
     */
    public WicketKeeper_Frm() {
        initComponents();
        WKList= new ArrayList<>(); 
        RoleDB= new Player_RoleDB();
        MasterDB= new MasterDB();      
        NList= new ArrayList<>();
        conn = new DBConnection().getConnection();
        
      ArrayList<PLayer_Role> RList=RoleDB.getPlayerRole();
         
        for(PLayer_Role u:RList){
            cmbPlayerRole.addItem(u.getRole_Name());   
        }
          tblModel=new DefaultTableModel();
          jwicketkeeper.setModel(tblModel);
        
        tblModel.addColumn("Player ID");
        tblModel.addColumn("Player Name");
        tblModel.addColumn("Player Role");
        tblModel.addColumn("Player Category");
        tblModel.addColumn("Nationality");
        tblModel.addColumn("Match Type");
        tblModel.addColumn("Total Match");
        tblModel.addColumn("Total Catchs");
        tblModel.addColumn("Total Stumps");
        tblModel.addColumn("Stump Weights");
        tblModel.addColumn("Catch Weights");
        tblModel.addColumn("Result");
        tblModel.addColumn("Error");
        tblModel.addColumn("Epoc");
        tblModel.addColumn("Sum");
        
    }
  
    private boolean isValidate(){ //Validate change into isValidate
       
        if (txtPlayerName.getText().equals(""))  
        {
            JOptionPane.showMessageDialog(rootPane, "Player Name is a requied field");  //help message
            txtPlayerName.requestFocusInWindow();
            return false;
        }
        if (txtNationality.getText().equals(""))  
        {
            JOptionPane.showMessageDialog(rootPane, "Nationality  is a requied field");  //help message
            txtNationality.requestFocusInWindow();
            return false;
        }
        if (txtNoCatch.getText().equals("")) //flag=false;
        {
            JOptionPane.showMessageDialog(rootPane, "Total Catchs is a requied field");   
            txtNoCatch.requestFocusInWindow();
            return false;
        }
         
        if (txtNoStump.getText().equals("")) //flag=false;
        {
            JOptionPane.showMessageDialog(rootPane, "Total Stumps is a requied field");  
            txtNoStump.requestFocusInWindow();
            return false;
        }
      
        return true;
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNationality = new javax.swing.JLabel();
        lblPlayerID = new javax.swing.JLabel();
        lblPlayerName = new javax.swing.JLabel();
        lblMatchtype = new javax.swing.JLabel();
        lblTotMatch = new javax.swing.JLabel();
        lblPlayerRole = new javax.swing.JLabel();
        lblNoStump = new javax.swing.JLabel();
        lblNoCatch = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cmbPlayerRole = new javax.swing.JComboBox();
        cmbMatchType = new javax.swing.JComboBox();
        txtPlayerID = new javax.swing.JTextField();
        txtPlayerName = new javax.swing.JTextField();
        txtNationality = new javax.swing.JTextField();
        txtsum = new javax.swing.JTextField();
        txtNoCatch = new javax.swing.JTextField();
        txtNoStump = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnProcess = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cmbcategory = new javax.swing.JComboBox<>();
        txtepoc = new javax.swing.JTextField();
        txtcatcweight = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jwicketkeeper = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        txtTotMatch = new javax.swing.JTextField();
        txtresult = new javax.swing.JTextField();
        txterror = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtstumweight = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1000, 621));
        setMinimumSize(new java.awt.Dimension(1000, 621));
        setPreferredSize(new java.awt.Dimension(1000, 621));
        setResizable(false);
        getContentPane().setLayout(null);

        lblNationality.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lblNationality);
        lblNationality.setBounds(790, 130, 100, 30);

        lblPlayerID.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lblPlayerID);
        lblPlayerID.setBounds(380, 90, 100, 30);

        lblPlayerName.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lblPlayerName);
        lblPlayerName.setBounds(380, 130, 100, 30);

        lblMatchtype.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lblMatchtype);
        lblMatchtype.setBounds(380, 170, 100, 30);

        lblTotMatch.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lblTotMatch);
        lblTotMatch.setBounds(380, 210, 100, 30);

        lblPlayerRole.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lblPlayerRole);
        lblPlayerRole.setBounds(790, 90, 100, 30);

        lblNoStump.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lblNoStump);
        lblNoStump.setBounds(790, 210, 100, 30);

        lblNoCatch.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lblNoCatch);
        lblNoCatch.setBounds(790, 170, 100, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Player ID");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(100, 90, 90, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Player Name");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(100, 130, 90, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Player Role");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(500, 90, 90, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nationality");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(500, 170, 90, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Match Type");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(100, 170, 90, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Sum");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(100, 360, 80, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("No of catch");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(500, 210, 90, 30);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("No of stump");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(500, 250, 90, 30);

        cmbPlayerRole.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Player Role" }));
        cmbPlayerRole.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPlayerRoleItemStateChanged(evt);
            }
        });
        getContentPane().add(cmbPlayerRole);
        cmbPlayerRole.setBounds(590, 90, 190, 30);

        cmbMatchType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "IPL", "SLPL", "BPL", "CPL" }));
        getContentPane().add(cmbMatchType);
        cmbMatchType.setBounds(190, 170, 180, 30);
        getContentPane().add(txtPlayerID);
        txtPlayerID.setBounds(190, 90, 180, 30);

        txtPlayerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPlayerNameKeyTyped(evt);
            }
        });
        getContentPane().add(txtPlayerName);
        txtPlayerName.setBounds(190, 130, 180, 30);

        txtNationality.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNationalityKeyTyped(evt);
            }
        });
        getContentPane().add(txtNationality);
        txtNationality.setBounds(590, 170, 190, 30);

        txtsum.setEditable(false);
        txtsum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtsumKeyTyped(evt);
            }
        });
        getContentPane().add(txtsum);
        txtsum.setBounds(190, 350, 180, 30);

        txtNoCatch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNoCatchKeyTyped(evt);
            }
        });
        getContentPane().add(txtNoCatch);
        txtNoCatch.setBounds(590, 210, 190, 30);

        txtNoStump.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNoStumpKeyTyped(evt);
            }
        });
        getContentPane().add(txtNoStump);
        txtNoStump.setBounds(590, 250, 190, 30);

        btnAdd.setBackground(new java.awt.Color(0, 0, 0));
        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd);
        btnAdd.setBounds(480, 440, 110, 30);

        btnClear.setBackground(new java.awt.Color(0, 0, 0));
        btnClear.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        getContentPane().add(btnClear);
        btnClear.setBounds(760, 440, 110, 30);

        btnProcess.setBackground(new java.awt.Color(0, 0, 0));
        btnProcess.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnProcess.setForeground(new java.awt.Color(255, 255, 255));
        btnProcess.setText("PROCESS");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });
        getContentPane().add(btnProcess);
        btnProcess.setBounds(620, 440, 110, 30);

        jLabel9.setFont(new java.awt.Font("Century", 1, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText(" W i c k e t   K e e p e r   F o r m ");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(310, 0, 350, 50);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Player Category");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(500, 140, 90, 14);

        cmbcategory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbcategoryItemStateChanged(evt);
            }
        });
        getContentPane().add(cmbcategory);
        cmbcategory.setBounds(590, 130, 190, 30);

        txtepoc.setEditable(false);
        getContentPane().add(txtepoc);
        txtepoc.setBounds(190, 400, 180, 30);

        txtcatcweight.setEditable(false);
        getContentPane().add(txtcatcweight);
        txtcatcweight.setBounds(590, 340, 200, 30);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Epoc");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(100, 400, 70, 30);

        jwicketkeeper.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9"
            }
        ));
        jScrollPane1.setViewportView(jwicketkeeper);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 490, 940, 130);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(10, 50, 970, 10);

        txtTotMatch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTotMatchKeyTyped(evt);
            }
        });
        getContentPane().add(txtTotMatch);
        txtTotMatch.setBounds(190, 210, 180, 30);

        txtresult.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtresultKeyTyped(evt);
            }
        });
        getContentPane().add(txtresult);
        txtresult.setBounds(190, 260, 180, 30);

        txterror.setEditable(false);
        txterror.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txterrorKeyTyped(evt);
            }
        });
        getContentPane().add(txterror);
        txterror.setBounds(190, 310, 180, 30);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Error");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(100, 300, 90, 30);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Result");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(100, 260, 90, 30);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Total Match");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(100, 210, 90, 30);

        txtstumweight.setEditable(false);
        getContentPane().add(txtstumweight);
        txtstumweight.setBounds(590, 300, 200, 30);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Catch Weigth");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(480, 340, 100, 30);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Stump Weigth");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(480, 300, 100, 30);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/wicketkeeper.jpg"))); // NOI18N
        jLabel10.setText("jLabel10");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(0, -50, 990, 720);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
       String  Player_ID  = txtPlayerID.getText();
       String  Player_Name= txtPlayerName.getText();
       String  Player_Role= cmbPlayerRole.getSelectedItem().toString();
       String  PlayerCatgegory=String.valueOf(cmbcategory.getSelectedItem());
       String  Nationality = txtNationality.getText();
       String  Match_Type=  cmbMatchType.getSelectedItem().toString();
       int     TotalMatch=Integer.parseInt(txtTotMatch.getText());
       int     NoOfCatchs=Integer.parseInt(txtNoCatch.getText());
       int     NoofStumps=Integer.parseInt(txtNoStump.getText());
       String  StumpWeight= txtstumweight.getText();
       String  CatchWeight= txtcatcweight.getText();
       int     Result= Integer.parseInt(txtresult.getText());
       String  Error= txterror.getText();
       String  Epoc=txtepoc.getText();
       String  Sum  = txtsum.getText();  
        
      Neural_WicketKeeperList  NWkeeper= new Neural_WicketKeeperList(Player_ID, Player_Name, Player_Role, PlayerCatgegory, Nationality, Match_Type, TotalMatch, NoOfCatchs, NoofStumps,StumpWeight,CatchWeight,Result, Error, Epoc, Sum);
        
        int result=MasterDB.AddWic_KeeperTrainData(NWkeeper);
             
            if(result>0){
                JOptionPane.showMessageDialog(rootPane, "Player DATA is added");
            }else{
                JOptionPane.showMessageDialog(rootPane, "Player DATA is not added");
            }  
  
    }//GEN-LAST:event_btnProcessActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if(isValidate()){
            
            double x = Double.parseDouble(txtNoCatch.getText());
            double x1 = 1/x;
            double y = Double.parseDouble(txtNoStump.getText());
            double y1 = 1/y;
            int s=Integer.parseInt(txtresult.getText());   
            
            
       String  Player_ID  = txtPlayerID.getText();
       String  Player_Name= txtPlayerName.getText();
       String  Player_Role= cmbPlayerRole.getSelectedItem().toString();
       String  PlayerCatgegory=String.valueOf(cmbcategory.getSelectedItem());
       String  Nationality = txtNationality.getText();
       String  Match_Type=  cmbMatchType.getSelectedItem().toString();
       int     TotalMatch=Integer.parseInt(txtTotMatch.getText());
       int     NoOfCatchs=Integer.parseInt(txtNoCatch.getText());
       int     NoofStumps=Integer.parseInt(txtNoStump.getText());
       String  StumpWeight= txtstumweight.getText();
       String  CatchWeight= txtcatcweight.getText();
       int     Result= Integer.parseInt(txtresult.getText());
       String  Error= txterror.getText();
       String  Epoc=txtepoc.getText();
       String  Sum  = txtsum.getText();  
         
           Wicket_KeeperList wk = new Wicket_KeeperList(Player_ID, Player_Name, Player_Role,PlayerCatgegory, Nationality, Match_Type, TotalMatch, NoOfCatchs, NoofStumps,StumpWeight,CatchWeight,Result, Error, Epoc, Sum);

           WKList.add(wk);
         
           Neural_WicketKeeperList  NWkeeper= new Neural_WicketKeeperList(Player_ID, Player_Name, Player_Role, PlayerCatgegory, Nationality, Match_Type, TotalMatch, NoOfCatchs, NoofStumps,StumpWeight,CatchWeight,Result, Error, Epoc, Sum);
          
           NWkeeper.getStumpInput(x1, 1);
           NWkeeper.getCatchInput(y1, 1);
           NWkeeper.RandomMethodStump();
           NWkeeper.RandomMethodCatch();
           NWkeeper.SumFunction();
           NWkeeper.SumFunction1();
           NWkeeper.Activate();
           NWkeeper.TrainingNetwork_Stump(0);
           NWkeeper.TrainingNetwork_Catch(0);
   
           NList.add(NWkeeper);
       
 
          int z=0;
          // while(z<1000)
           while((z<100)){
           NWkeeper.TrainingNetwork_Stump(s);
           NWkeeper.TrainingNetwork_Catch(s);
           NWkeeper.SumFunction();
           NWkeeper.SumFunction1();
           NWkeeper.Activate();
           
           
           txtepoc.setText((Integer.toString(NWkeeper.Epoch++))); 
            z++;
          }
          if(NWkeeper.error==0)
                txtstumweight.setText(String.valueOf(NWkeeper.Stumps_weights[0]));
                txtcatcweight.setText(String.valueOf(NWkeeper.Catchs_weights[0]));
                txterror.setText(Double.toString(NWkeeper.error));
                txtsum.setText((Double.toString(NWkeeper.sumvalue)));
             
                
           for(int i=0; i<NList.size(); i++){
            
           tblModel.addRow(new Object[]{NList.get(i).getPlayerID(),NList.get(i).getPlayer_Name(),NList.get(i).getPlayer_Role(),NList.get(i).getPlayerCategory(),NList.get(i).getNationality(),NList.get(i).getMatch_Type(),NList.get(i).getTotal_Matchs(),NList.get(i).getStumps(),NList.get(i).getNo_ofCatchs(),txtstumweight.getText(), txtcatcweight.getText(),txtresult.getText(),txterror.getText(),txtepoc.getText(),txtsum.getText()});
          }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtPlayerNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlayerNameKeyTyped
        // TODO add your handling code here:
          char c=evt.getKeyChar();
         if (!Character.isLetter(c)){
            evt.consume();
        }
    }//GEN-LAST:event_txtPlayerNameKeyTyped

    private void txtNationalityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNationalityKeyTyped
        // TODO add your handling code here:
//          char c=evt.getKeyChar();
//        if (!Character.isLetter(c)){
//            evt.consume();
//        }
    }//GEN-LAST:event_txtNationalityKeyTyped

    private void txtNoCatchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoCatchKeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        if(c!='0' && c!='1' && c!='2' && c!='3' && c!='4' && c!='5' && c!='5' && c!='6' && c!='7' && c!='8' && c!='9')
            evt.consume();
    }//GEN-LAST:event_txtNoCatchKeyTyped

    private void txtsumKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsumKeyTyped
        // TODO add your handling code here:
    
    }//GEN-LAST:event_txtsumKeyTyped

    private void txtNoStumpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoStumpKeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        if(c!='0' && c!='1' && c!='2' && c!='3' && c!='4' && c!='5' && c!='5' && c!='6' && c!='7' && c!='8' && c!='9')
            evt.consume();
    }//GEN-LAST:event_txtNoStumpKeyTyped

    private void cmbcategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbcategoryItemStateChanged
        // TODO add your handling code here:
       
    }//GEN-LAST:event_cmbcategoryItemStateChanged

    private void cmbPlayerRoleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPlayerRoleItemStateChanged
        // TODO add your handling code here:
         cmbcategory.removeAllItems();
        
        String role= cmbPlayerRole.getSelectedItem().toString();
        String sql="SELECT  * From player_category AS c INNER JOIN player_role AS p ON c.Role_ID=p.Role_ID WHERE p.Role_Name=?";
        
        try{
        
              pst=conn.prepareStatement(sql);
              pst.setString(1, role);
              rs=pst.executeQuery();
      
            while(rs.next()){
               String Category=rs.getString("Category");
               
                cmbcategory.addItem(Category);
              }  
        
          }catch(Exception e)
          {
            JOptionPane.showMessageDialog(null, e);
          }
    }//GEN-LAST:event_cmbPlayerRoleItemStateChanged

    private void txtTotMatchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotMatchKeyTyped
        // TODO add your handling code here:
             char c=evt.getKeyChar();
        if(c!='0' && c!='1' && c!='2' && c!='3' && c!='4' && c!='5' && c!='5' && c!='6' && c!='7' && c!='8' && c!='9')
            evt.consume();
    }//GEN-LAST:event_txtTotMatchKeyTyped

    private void txtresultKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtresultKeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        if(c!='0' && c!='1')
            evt.consume();
    }//GEN-LAST:event_txtresultKeyTyped

    private void txterrorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txterrorKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txterrorKeyTyped

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtNationality.setText("");
        txtNoCatch.setText("");
        txtNoStump.setText("");
        txtPlayerID.setText("");
        txtPlayerName.setText("");
        txtTotMatch.setText("");
        txtcatcweight.setText("");
        txtepoc.setText("");
        txterror.setText("");
        txtresult.setText("");
        txtsum.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WicketKeeper_Frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WicketKeeper_Frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WicketKeeper_Frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WicketKeeper_Frm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new WicketKeeper_Frm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnProcess;
    private javax.swing.JComboBox cmbMatchType;
    private javax.swing.JComboBox cmbPlayerRole;
    private javax.swing.JComboBox<String> cmbcategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jwicketkeeper;
    private javax.swing.JLabel lblMatchtype;
    private javax.swing.JLabel lblNationality;
    private javax.swing.JLabel lblNoCatch;
    private javax.swing.JLabel lblNoStump;
    private javax.swing.JLabel lblPlayerID;
    private javax.swing.JLabel lblPlayerName;
    private javax.swing.JLabel lblPlayerRole;
    private javax.swing.JLabel lblTotMatch;
    private javax.swing.JTextField txtNationality;
    private javax.swing.JTextField txtNoCatch;
    private javax.swing.JTextField txtNoStump;
    private javax.swing.JTextField txtPlayerID;
    private javax.swing.JTextField txtPlayerName;
    private javax.swing.JTextField txtTotMatch;
    private javax.swing.JTextField txtcatcweight;
    private javax.swing.JTextField txtepoc;
    private javax.swing.JTextField txterror;
    private javax.swing.JTextField txtresult;
    private javax.swing.JTextField txtstumweight;
    private javax.swing.JTextField txtsum;
    // End of variables declaration//GEN-END:variables
}
