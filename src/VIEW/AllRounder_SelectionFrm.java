/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;
import java.util.Arrays;
import MODEL.*;
import CONTROLLER.*;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.stream.DoubleStream;
import javax.swing.JOptionPane;
/**
 *
 * @author MASS MNM
 */
public class AllRounder_SelectionFrm extends javax.swing.JFrame {
private MasterDB MasterDB;
    /**
     * Creates new form AllRounder_SelectionFrm
     */
    public AllRounder_SelectionFrm() {
        initComponents();
        MasterDB=new MasterDB();
    }
    private boolean isValidate(){ //Validate change into isValidate
       
        if (txtplayername.getText().equals(""))  
        {
            JOptionPane.showMessageDialog(rootPane, "Player Name is a requied field");  //help message
            txtplayername.requestFocusInWindow();
            return false;
        }
        if (txtnationalit.getText().equals(""))  
        {
            JOptionPane.showMessageDialog(rootPane, "Nationality  is a requied field");  //help message
            txtnationalit.requestFocusInWindow();
            return false;
        }
        if (txtSRare.getText().equals("")) //flag=false;
        {
            JOptionPane.showMessageDialog(rootPane, "Batting Strike Rate is a requied field");   
            txtSRare.requestFocusInWindow();
            return false;
        }
        if (txtAverage.getText().equals("")) //flag=false;
        {
            JOptionPane.showMessageDialog(rootPane, "Batting Average is a requied field");  
            txtAverage.requestFocusInWindow();
            return false;
        }
        if (txtEconomy.getText().equals("")) //flag=false;
        {
            JOptionPane.showMessageDialog(rootPane, "Bowling Economy is a requied field");  
            txtEconomy.requestFocusInWindow();
            return false;
        }
        if (txtBowlAvergr.getText().equals("")) //flag=false;
        {
            JOptionPane.showMessageDialog(rootPane, "Bowling Average is a requied field");  
            txtBowlAvergr.requestFocusInWindow();
            return false;
        }
        if (txtteamid.getText().equals("")) //flag=false;
        {
            JOptionPane.showMessageDialog(rootPane, "Team ID is a requied field");  
            txtteamid.requestFocusInWindow();
            return false;
        }
        if (txtteamname.getText().equals("")) //flag=false;
        {
            JOptionPane.showMessageDialog(rootPane, "Team Name is a requied field");  
            txtteamname.requestFocusInWindow();
            return false;
        }
        return true;
   }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbPRole = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtAverage = new javax.swing.JTextField();
        txtEconomy = new javax.swing.JTextField();
        txtBowlAvergr = new javax.swing.JTextField();
        txtSRare = new javax.swing.JTextField();
        btnadd = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        lblExistingSrate = new javax.swing.JLabel();
        lblExistingBowlAve = new javax.swing.JLabel();
        lblExistingBatAverg = new javax.swing.JLabel();
        lblExistingEcon = new javax.swing.JLabel();
        txtPrecSrate = new javax.swing.JTextField();
        txtPrecBAverg = new javax.swing.JTextField();
        txtPrecEon = new javax.swing.JTextField();
        txtbowlAverg = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtsweight = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtAweight = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txteconweight = new javax.swing.JTextField();
        txtbaverweight = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtnationalit = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txttotmatch = new javax.swing.JTextField();
        txtplayername = new javax.swing.JTextField();
        txtteamname = new javax.swing.JTextField();
        txtteamid = new javax.swing.JTextField();
        btnprocess = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(860, 650));
        setMinimumSize(new java.awt.Dimension(860, 650));
        setPreferredSize(new java.awt.Dimension(860, 650));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Player Role");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, -1, -1));

        cmbPRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL ROUNDER" }));
        getContentPane().add(cmbPRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 50, 160, 30));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Strike Rate");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 100, 60, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Bat_Average");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, -1, -1));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Bowl Economy");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, -1, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Bowl Average");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 220, -1, -1));

        txtAverage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAverageKeyTyped(evt);
            }
        });
        getContentPane().add(txtAverage, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 130, 165, 29));

        txtEconomy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEconomyKeyTyped(evt);
            }
        });
        getContentPane().add(txtEconomy, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, 165, 29));

        txtBowlAvergr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBowlAvergrKeyTyped(evt);
            }
        });
        getContentPane().add(txtBowlAvergr, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, 165, 29));

        txtSRare.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSRareKeyTyped(evt);
            }
        });
        getContentPane().add(txtSRare, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 90, 165, 29));

        btnadd.setText("ADD");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });
        getContentPane().add(btnadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 520, 88, 40));

        btnclear.setText("CLEAR");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });
        getContentPane().add(btnclear, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 520, 88, 40));

        lblExistingSrate.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lblExistingSrate, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 420, 256, 28));

        lblExistingBowlAve.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lblExistingBowlAve, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 450, 290, 28));

        lblExistingBatAverg.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lblExistingBatAverg, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 450, 264, 28));

        lblExistingEcon.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lblExistingEcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 420, 280, 28));

        txtPrecSrate.setEditable(false);
        txtPrecSrate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecSrateActionPerformed(evt);
            }
        });
        getContentPane().add(txtPrecSrate, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 250, 160, 29));

        txtPrecBAverg.setEditable(false);
        getContentPane().add(txtPrecBAverg, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 290, 160, 29));

        txtPrecEon.setEditable(false);
        getContentPane().add(txtPrecEon, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 330, 160, 30));

        txtbowlAverg.setEditable(false);
        getContentPane().add(txtbowlAverg, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 370, 160, 30));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Strike rate Weight");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 260, -1, -1));

        txtsweight.setEditable(false);
        getContentPane().add(txtsweight, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, 170, 31));

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Bat Average Weight");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, -1, -1));

        txtAweight.setEditable(false);
        getContentPane().add(txtAweight, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, 170, 31));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Economy Weight");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 340, 100, -1));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Bowl Average Weigth");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 380, -1, -1));

        txteconweight.setEditable(false);
        getContentPane().add(txteconweight, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 330, 170, 30));

        txtbaverweight.setEditable(false);
        getContentPane().add(txtbaverweight, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 370, 170, 30));

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("==>");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 300, -1, -1));

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("==>");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 260, 40, -1));

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("==>");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 340, 40, -1));

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("==>");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 380, 32, -1));

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Team ID");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 100, 60, 20));
        getContentPane().add(txtnationalit, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 170, 160, 29));

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Total Match");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 220, 70, -1));

        txttotmatch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txttotmatchKeyTyped(evt);
            }
        });
        getContentPane().add(txttotmatch, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 210, 160, 30));
        getContentPane().add(txtplayername, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 170, 30));

        txtteamname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtteamnameActionPerformed(evt);
            }
        });
        getContentPane().add(txtteamname, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 130, 160, 30));
        getContentPane().add(txtteamid, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 90, 160, 30));

        btnprocess.setText("PROCESS");
        btnprocess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnprocessActionPerformed(evt);
            }
        });
        getContentPane().add(btnprocess, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 520, 88, 40));

        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Player Name");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 80, -1));

        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Team  Name");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 140, 80, -1));

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("NEW ALL ROUNDER FORMS");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 250, -1));

        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Nationality");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 180, 80, -1));

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/AllS.jpg"))); // NOI18N
        jLabel16.setText("jLabel16");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 590));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
         if(isValidate()){
           double []ExistingTot_SRate = new double[150];
           double []ExistingTot_Ave  = new double[150];
           double []ExistingTot_Econ = new double[150];
           double []ExistingTot_BAverg  = new double[150];
           int x=0;
        
        
        
       // tblModel.setRowCount(0);
        String PName=cmbPRole.getSelectedItem().toString();
        ArrayList<Allrounder_List> allList=MasterDB.GetAllRounder(PName);
        
        for(Allrounder_List atn:allList){
                
         ExistingTot_SRate[x] = Double.parseDouble(atn.getSrate_Weight());
         ExistingTot_Ave  [x] = Double.parseDouble(atn.getBatAve_Weight());
         ExistingTot_Econ [x] = Double.parseDouble(atn.getBEcon_Weight());
         ExistingTot_BAverg[x]= Double.parseDouble(atn.getBowlAve_Weight());
           x++;
        }
        
        double s= DoubleStream.of(ExistingTot_SRate).sum()/100;
        double b= DoubleStream.of(ExistingTot_Ave).sum()/100;
        double c= DoubleStream.of( ExistingTot_Econ).sum()/100;
        double a= DoubleStream.of(ExistingTot_BAverg).sum()/100; 
    
       
            double k = Double.parseDouble(txtSRare.getText());
            double x1 = 1/k;
            double m = Double.parseDouble(txtAverage.getText());
            double y1 = 1/m;
            double n = Double.parseDouble(txtEconomy.getText());
            double z1 = 1/n;
            double v = Double.parseDouble(txtBowlAvergr.getText());
            double v1 = 1/v;
            
            
            Train_AllRounder predvalue= new Train_AllRounder();
            
            predvalue.getSrateInput(x1,1);
            predvalue.getBatAveInput(y1, 1);
            predvalue.getBEconInput(z1,1);
            predvalue.getBowAveInput(v1, 1);
            predvalue.RandomMethodSrate();
            predvalue.RandomMethodBEcon();
            predvalue.RandomMethodBowAver();
            predvalue.RandomMethodAverage();
            predvalue.SumFunction();
            predvalue.SumFunction1();
            predvalue.SumFunction2();
            predvalue.SumFunction3();
            predvalue.Activate();
            predvalue.TrainingNetwork(0);
            predvalue.TrainingNetwork1(0);
            predvalue.TrainingNetwork2(0);
            predvalue.TrainingNetwork3(0);
       
 
          int z=0;
           
           while((z<100)){
            predvalue.TrainingNetwork(1);
            predvalue.TrainingNetwork1(1);
            predvalue.TrainingNetwork2(1);
            predvalue.TrainingNetwork3(1);
            predvalue.SumFunction();
            predvalue.SumFunction1();
            predvalue.SumFunction2();
            predvalue.SumFunction3();
             
            predvalue.Activate();
            
             z++;
          }
           

           if(predvalue.error==0){
               
                 txtsweight.setText(String.valueOf(predvalue.Srate_weights[0]));
                 txtAweight.setText(String.valueOf(predvalue.Ave_weights[0]));
                 txteconweight.setText(String.valueOf(predvalue.BEcon_weights[0]));
                 txtbaverweight.setText(String.valueOf(predvalue.BAve_weights[0]));
                 
              DecimalFormat  df= new DecimalFormat("##.##");
                 
              txtPrecSrate.setText(df.format(predvalue.Srate_weights[0]*100)+" %");   
              txtPrecBAverg.setText(df.format(predvalue.Ave_weights[0]*100)+" %");
              txtPrecEon.setText(df.format(predvalue.BEcon_weights[0]*100)+" %");   
              txtbowlAverg.setText(df.format(predvalue.BAve_weights[0]*100)+" %");
              
              lblExistingSrate.setText("Predictable AllRounder Strike Rate "+df.format(s*100)+" %");
              lblExistingBatAverg.setText("Predictable AllRounder Avarage  "+df.format(b*100)+" %");
              lblExistingEcon.setText("Predictable AllRounder Bowling Economy "+df.format(c*100)+" %");
              lblExistingBowlAve.setText("Predictable AllRounder Bowling Avarage  "+df.format(a*100)+" %");  
           }
         }
    }//GEN-LAST:event_btnaddActionPerformed

    private void txtPrecSrateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecSrateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecSrateActionPerformed

    private void btnprocessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnprocessActionPerformed
        // TODO add your handling code here:
       String  Team_ID=    txtteamid.getText();
       String  Team_Name=  txtteamname.getText();
       String  PlayerName= txtplayername.getText();
       String  Player_Role= cmbPRole.getSelectedItem().toString();
       String  Nationality= txtnationalit.getText();
       int     Total_Matchs= Integer.parseInt(txttotmatch.getText());
       int     Innigs= 0;
       int     Highscore=0;
       int     totwicket= 0;
       double  Bat_Srate=    Double.parseDouble(txtSRare.getText());
       double  Bat_Ave    =  Double.parseDouble(txtAverage.getText());
       double  Bowl_Economy= Double.parseDouble(txtEconomy.getText());
       double  Bowl_Average= Double.parseDouble(txtBowlAvergr.getText());
       int     Stumps= 0;
       int     Catchs= 0;
       String  Bat_SWeight= txtsweight.getText();
       String  Bat_AWeight= txtAweight.getText();
       String  Bowl_EWeight= txteconweight.getText();
       String  Bowl_AWeight= txtbaverweight.getText();
       String  Catch_Weight= null;
       String  Stump_Weight= null;
     
       
       Team_Players   team= new Team_Players(Team_ID, Team_Name, PlayerName, Player_Role, Nationality, Total_Matchs, Innigs, Highscore,totwicket, Bat_Srate, Bat_Ave, Bowl_Economy, Bowl_Average, Stumps,Catchs, Bat_SWeight, Bat_AWeight,Bowl_EWeight,Bowl_AWeight, Catch_Weight,Stump_Weight);
       
        int result= MasterDB.AddTeamPlayers(team);
            
            if(result>0){
                JOptionPane.showMessageDialog(rootPane, "Teams Player is added");
            }else{
                JOptionPane.showMessageDialog(rootPane, "Team Player is not added");
            }  
    }//GEN-LAST:event_btnprocessActionPerformed

    private void txtteamnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtteamnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtteamnameActionPerformed

    private void txtSRareKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSRareKeyTyped
        // TODO add your handling code here:
             char c=evt.getKeyChar();
        if(c!='0' && c!='1' && c!='2' && c!='3' && c!='4' && c!='5' && c!='5' && c!='6' && c!='7' && c!='8' && c!='9' && c!='.')
            evt.consume();
    
    }//GEN-LAST:event_txtSRareKeyTyped

    private void txtAverageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAverageKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(c!='0' && c!='1' && c!='2' && c!='3' && c!='4' && c!='5' && c!='5' && c!='6' && c!='7' && c!='8' && c!='9' && c!='.')
            evt.consume();
    }//GEN-LAST:event_txtAverageKeyTyped

    private void txtEconomyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEconomyKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(c!='0' && c!='1' && c!='2' && c!='3' && c!='4' && c!='5' && c!='5' && c!='6' && c!='7' && c!='8' && c!='9' && c!='.')
            evt.consume();
    }//GEN-LAST:event_txtEconomyKeyTyped

    private void txtBowlAvergrKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBowlAvergrKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(c!='0' && c!='1' && c!='2' && c!='3' && c!='4' && c!='5' && c!='5' && c!='6' && c!='7' && c!='8' && c!='9' && c!='.')
            evt.consume();
    }//GEN-LAST:event_txtBowlAvergrKeyTyped

    private void txttotmatchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttotmatchKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(c!='0' && c!='1' && c!='2' && c!='3' && c!='4' && c!='5' && c!='5' && c!='6' && c!='7' && c!='8' && c!='9' && c!='.')
            evt.consume();
    }//GEN-LAST:event_txttotmatchKeyTyped

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        // TODO add your handling code here:
        txtAverage.setText("");
        txtAweight.setText("");
        txtBowlAvergr.setText("");
        txtEconomy.setText("");
        txtPrecBAverg.setText("");
        txtPrecEon.setText("");
        txtPrecSrate.setText("");
        txtSRare.setText("");
        txtbaverweight.setText("");
        txtbowlAverg.setText("");
        txteconweight.setText("");
        txtnationalit.setText("");
        txtplayername.setText("");
        txtsweight.setText("");
        txtteamid.setText("");
        txtteamname.setText("");
        txttotmatch.setText("");
        
    }//GEN-LAST:event_btnclearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllRounder_SelectionFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllRounder_SelectionFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllRounder_SelectionFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllRounder_SelectionFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AllRounder_SelectionFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btnprocess;
    private javax.swing.JComboBox<String> cmbPRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblExistingBatAverg;
    private javax.swing.JLabel lblExistingBowlAve;
    private javax.swing.JLabel lblExistingEcon;
    private javax.swing.JLabel lblExistingSrate;
    private javax.swing.JTextField txtAverage;
    private javax.swing.JTextField txtAweight;
    private javax.swing.JTextField txtBowlAvergr;
    private javax.swing.JTextField txtEconomy;
    private javax.swing.JTextField txtPrecBAverg;
    private javax.swing.JTextField txtPrecEon;
    private javax.swing.JTextField txtPrecSrate;
    private javax.swing.JTextField txtSRare;
    private javax.swing.JTextField txtbaverweight;
    private javax.swing.JTextField txtbowlAverg;
    private javax.swing.JTextField txteconweight;
    private javax.swing.JTextField txtnationalit;
    private javax.swing.JTextField txtplayername;
    private javax.swing.JTextField txtsweight;
    private javax.swing.JTextField txtteamid;
    private javax.swing.JTextField txtteamname;
    private javax.swing.JTextField txttotmatch;
    // End of variables declaration//GEN-END:variables
}
